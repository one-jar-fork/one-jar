<project name="one-jar-dll" default="dist" basedir=".">

    <pathconvert targetos="unix" property="basedir.unix">
        <path location="${basedir}"/>
    </pathconvert>

	<property name="build.dir" location="${basedir}/build" />
	<property name="classes.dir" location="${build.dir}/ant" />
	<property name="jar.dir" location="${build.dir}/jars" />
	<property name="src.dir" location="${basedir}/src" />
    <property name="cpp.dir" location="${base.dir}/cpp"/>   
    <property name="test.dir" location="${basedir}/test" />
	<property name="native.dir" location="${basedir}/Debug" />
    <property name="dist.dir" location="${basedir}/dist" />
	<property name="one-jar.version" value="0.97" />
    <property name="one-jar.dir" location="../one-jar"/>   
    <property name="one-jar.build.ant" location="${one-jar.dir}/build/ant"/>   
	<property name="one-jar-boot.jar" location="${basedir}/../one-jar/dist/one-jar-boot-${one-jar.version}.jar" />
 
	<!-- Defaults: expected to be overriden as part of overall test suite for aggregation. -->
	<property name="test.reports.dir" value="${basedir.unix}/test-reports"/>
	<property name="test.results.dir" value="${basedir.unix}/test-results"/>
	
    <!-- Import the OneJar Ant taskdefs from a peer one-jar project -->
    <property name="one-jar.dist.dir" value="${basedir}/../one-jar/dist"/>   
    <import file="${one-jar.dist.dir}/one-jar-ant-task.xml"/>
    <import file="${one-jar.dist.dir}/one-jar-macro.xml"/>
    
	<target name="mkdirs">
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${jar.dir}/main" />
		<mkdir dir="${jar.dir}/binlib" />
		<mkdir dir="${jar.dir}/one-jar" />
        <mkdir dir="${test.results.dir}" />
		<mkdir dir="${test.reports.dir}"/>
	</target>

	<target name="clean">
		<delete dir="${classes.dir}" />
        <delete dir="${jar.dir}" />
	</target>

    <target name="compile.tests">
        <ant antfile="${one-jar.dir}/build.xml" target="compile.tests" inheritall="false">
        </ant>   
        <mkdir dir="${classes.dir}/test" />
        <javac destdir="${classes.dir}/test" debug="on" deprecation="off" optimize="off">
            <src path="${test.dir}" />
            <classpath>
                <fileset file="${one-jar.dir}/dist/one-jar-boot-${one-jar.version}.jar"/>   
                <path location="${one-jar.dir}/lib/junit-3.8.1.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="main" depends="mkdirs">
        <mkdir dir="${classes.dir}/src"/>   
		<javac destdir="${classes.dir}/src" debug="on" deprecation="off" optimize="off">
			<src path="${src.dir}" />
            <classpath>
                <fileset file="${one-jar-boot.jar}" />
                <path location="${one-jar.ant.jar}"/>  
            </classpath>
		</javac>
		<jar destfile="${jar.dir}/main/main.jar" manifest="${src.dir}/main-manifest.mf">
			<fileset dir="${classes.dir}/src">
				<include name="**/*.class" />
			</fileset>
            <fileset dir="${one-jar.build.ant}/example">
                <include name="**/Testable*"/>
            </fileset>   
		</jar>
	</target>

	<target name="binlib" depends="mkdirs">
		<!-- Requires a pre-built one-jar-dll.dll, built using the Eclipse CDT -->
		<available file="${native.dir}/one-jar-dll.dll" property="one-jar-dll.available" />
		<fail unless="one-jar-dll.available" message="Missing ${native.dir}/one-jar-dll.dll" />
		<copy file="${native.dir}/one-jar-dll.dll" todir="${jar.dir}/binlib" />
		<mkdir dir="${jar.dir}/binlib/windows32"/>
		<copy file="${jar.dir}/binlib/one-jar-dll.dll" todir="${jar.dir}/binlib/windows32"/>
	</target>

	<target name="one-jar-boot" depends="mkdirs">
		<!-- Unpack the one-jar support code -->
		<unjar dest="${jar.dir}/one-jar" src="${one-jar-boot.jar}" />
	</target>

	<target name="dist" depends="main,binlib,one-jar-boot,one-jar-ant,one-jar-ant-arch">
        <mkdir dir="${dist.dir}"/>   
		<jar destfile="${dist.dir}/one-jar-dll-${one-jar.version}.jar" manifest="${jar.dir}/one-jar/boot-manifest.mf">
			<fileset dir="${jar.dir}">
				<include name="main/main.jar" />
				<include name="binlib/one-jar-dll.dll" />
			</fileset>
			<fileset dir="${jar.dir}/one-jar">
				<include name="**/*.class" />
			</fileset>
            <fileset dir="${basedir}">
                <include name="cpp/**"/>
                <include name="Debug/**"/>
            </fileset>   
		</jar>
		<copy file="${build.dir}/one-jar-dll-task-${one-jar.version}.jar" todir="${dist.dir}"/>
        <copy file="${build.dir}/one-jar-dll-task-arch-${one-jar.version}.jar" todir="${dist.dir}"/>
	</target>


	<target name="one-jar-ant-macro" depends="main,binlib,one-jar-boot">
		<!-- The one-jar Ant macro -->
		<one-jar-macro manifest="src/boot-manifest.mf" mainmanifest="${src.dir}/main-manifest.mf" destfile="${build.dir}/one-jar-dll-macro-${one-jar.version}.jar" onejarboot="${one-jar-boot.jar}">
			<main manifest="${src.dir}/main-manifest.mf">
				<fileset dir="${classes.dir}" includes="**/*.class" />
			</main>
			<binlib>
				<fileset dir="${jar.dir}/binlib" includes="one-jar-dll.dll" />
			</binlib>
            <fileset dir="${basedir}">
                <include name="cpp/**"/>
                <include name="Debug/**"/>
            </fileset>   
		</one-jar-macro>
	</target>
	
	<target name="one-jar-ant" depends="main,binlib,one-jar-boot">
		<!-- The one-jar Ant taskdef, extends <jar> -->
		<one-jar manifest="src/boot-manifest.mf" destfile="${build.dir}/one-jar-dll-task-${one-jar.version}.jar">
			<main manifest="${src.dir}/main-manifest.mf">
				<fileset dir="${classes.dir}/src" includes="**/*.class" />
			</main>
			<binlib>
				<fileset dir="${jar.dir}/binlib" includes="one-jar-dll.dll" />
			</binlib>
            <fileset dir="${basedir}">
                <include name="cpp/**"/>
                <include name="Debug/**"/>
            </fileset>   
		</one-jar>
	</target>
	
	<target name="one-jar-ant-arch" depends="main,binlib,one-jar-boot">
        <one-jar manifest="src/boot-manifest.mf" destfile="${build.dir}/one-jar-dll-task-arch-${one-jar.version}.jar">
            <main manifest="${src.dir}/main-manifest.mf">
                <fileset dir="${classes.dir}/src" includes="**/*.class" />
            </main>
            <binlib>
                <fileset dir="${jar.dir}/binlib" includes="windows32/one-jar-dll.dll" />
            </binlib>
            <fileset dir="${basedir}">
                <include name="cpp/**"/>
                <include name="Debug/**"/>
            </fileset>   
        </one-jar>
	</target>
	
    <property name="formatter" value="xml" />
    
    <!-- Test the distribution -->
    <target name="test" depends="dist" description="Test native library mechanism">
        <antcall target="test.one-jar-task-dll" />
        <antcall target="test.one-jar-task-arch-dll" />
        <antcall target="report"/>   
    </target>
   
    <target name="test.one-jar-task-dll" depends="dist,compile.tests">
        <echo>********** one-jar-dll-task-dll-${one-jar.version}.jar</echo>
        <junit fork="yes" showoutput="no" printsummary="yes">
            <jvmarg value="-Done-jar.verbose=true" />
            <jvmarg value="-Done-jar.jarname=${basedir}/build/one-jar-dll-${one-jar.version}.jar" />
            <classpath>
                <fileset file="${basedir}/build/one-jar-dll-task-${one-jar.version}.jar" />
                <path location="${one-jar.build.ant}/test"/> 
                <path location="${one-jar.build.ant}/example"/> 
                <path location="${classes.dir}/test" />
            	<path location="${one-jar.dir}/lib/junit-3.8.1.jar"/>
            </classpath>

            <test name="com.simontuffs.onejar.dll.test.SelfTestDLL" todir="${test.results.dir}" outfile="one-jar-SelfTestDLL" />
            <formatter type="${formatter}" usefile="yes" />
        </junit>
    </target>

    <target name="test.one-jar-task-arch-dll" depends="dist,compile.tests">
        <echo>********** one-jar-dll-task-arch-dll-${one-jar.version}.jar</echo>
        <junit fork="yes" showoutput="no" printsummary="yes">
            <jvmarg value="-Done-jar.verbose=true" />
            <jvmarg value="-Done-jar.jarname=${basedir}/build/one-jar-dll-${one-jar.version}.jar" />
            <classpath>
                <fileset file="${basedir}/build/one-jar-dll-task-arch-${one-jar.version}.jar" />
                <path location="${one-jar.build.ant}/test"/> 
                <path location="${one-jar.build.ant}/example"/> 
                <path location="${classes.dir}/test" />
                <path location="${one-jar.dir}/lib/junit-3.8.1.jar"/>
            </classpath>

            <test name="com.simontuffs.onejar.dll.test.SelfTestArchDLL" todir="${test.results.dir}" outfile="one-jar-SelfTestArchDLL" />
            <formatter type="${formatter}" usefile="yes" />
        </junit>
    </target>

    <target name="report">
        <echo>basedir.unix=${basedir.unix}</echo>
    	<echo>test.reports=${test.reports.dir}</echo>
            
        <mkdir dir="${test.reports.dir}" />
        <junitreport todir="${test.reports.dir}">
            <fileset dir="${test.results.dir}" includes="*SelfTest*.xml" />
            <report format="noframes" todir="${test.reports.dir}" />
        </junitreport>
        <echo>***********************************************</echo>
        <echo>* Report is in ${test.reports.dir}/index.html</echo>
        <echo>***********************************************</echo>
    </target>
</project>